2016-08-02 09:41:47,632 - Perf_kernel - INFO - /home/Lpbs-i/Setup.xml
2016-08-02 09:41:47,632 - Perf_kernel - INFO - /home/Lpbs-i/Test_parameter.xml
2016-08-02 09:41:47,636 - Perf_kernel - INFO - /home/Lpbs-i/Setup.xml
2016-08-02 09:41:47,710 - Perf_kernel - INFO - test is /home/Lpbs-i/tmp
2016-08-02 09:41:47,774 - Perf_kernel - INFO - {u'tarbal': u'lmbench3.tar.gz', u'test_type': u'kernel', u'tag': u'kernel', u'reboot': u'no', u'runtimes': u'3'}
2016-08-02 09:41:47,774 - Perf_kernel - INFO - 3
2016-08-02 09:41:47,775 - Perf_kernel - INFO - /bin/make rerun
2016-08-02 10:03:40,380 - Perf_kernel - INFO - cd src && /bin/make rerun
2016-08-02 10:03:40,380 - Perf_kernel - INFO - make[1]: 进入目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:03:40,380 - Perf_kernel - INFO - gmake[2]: 进入目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c lib_tcp.c -o ../bin/x86_64-linux-gnu/lib_tcp.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c lib_udp.c -o ../bin/x86_64-linux-gnu/lib_udp.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c lib_unix.c -o ../bin/x86_64-linux-gnu/lib_unix.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c lib_timing.c -o ../bin/x86_64-linux-gnu/lib_timing.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c lib_mem.c -o ../bin/x86_64-linux-gnu/lib_mem.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c lib_stats.c -o ../bin/x86_64-linux-gnu/lib_stats.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c lib_debug.c -o ../bin/x86_64-linux-gnu/lib_debug.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c getopt.c -o ../bin/x86_64-linux-gnu/getopt.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -c lib_sched.c -o ../bin/x86_64-linux-gnu/lib_sched.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - /bin/rm -f ../bin/x86_64-linux-gnu/lmbench.a
2016-08-02 10:03:40,381 - Perf_kernel - INFO - ar cr ../bin/x86_64-linux-gnu/lmbench.a ../bin/x86_64-linux-gnu/lib_tcp.o ../bin/x86_64-linux-gnu/lib_udp.o ../bin/x86_64-linux-gnu/lib_unix.o ../bin/x86_64-linux-gnu/lib_timing.o ../bin/x86_64-linux-gnu/lib_mem.o ../bin/x86_64-linux-gnu/lib_stats.o ../bin/x86_64-linux-gnu/lib_debug.o ../bin/x86_64-linux-gnu/getopt.o ../bin/x86_64-linux-gnu/lib_sched.o
2016-08-02 10:03:40,381 - Perf_kernel - INFO - ranlib ../bin/x86_64-linux-gnu/lmbench.a
2016-08-02 10:03:40,381 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/bw_file_rd bw_file_rd.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/bw_mem bw_mem.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/bw_mmap_rd bw_mmap_rd.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/bw_pipe bw_pipe.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/bw_tcp bw_tcp.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/bw_unix bw_unix.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/hello hello.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_select lat_select.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_pipe lat_pipe.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_rpc lat_rpc.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_syscall lat_syscall.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_tcp lat_tcp.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,382 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_udp lat_udp.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_mmap lat_mmap.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/mhz mhz.c ../bin/x86_64-linux-gnu/lmbench.a -lm -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_proc lat_proc.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_pagefault lat_pagefault.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_connect lat_connect.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_fs lat_fs.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_sig lat_sig.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_mem_rd lat_mem_rd.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_ctx lat_ctx.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_sem lat_sem.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/memsize memsize.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_unix lat_unix.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,383 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lmdd lmdd.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/timing_o timing_o.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/enough enough.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/msleep msleep.c
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/loop_o loop_o.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_fifo lat_fifo.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lmhttp lmhttp.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_http lat_http.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_fcntl lat_fcntl.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/disk disk.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_unix_connect lat_unix_connect.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -DMAIN -o ../bin/x86_64-linux-gnu/flushdisk flushdisk.c
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_ops lat_ops.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,384 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/line line.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/tlb tlb.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/par_mem par_mem.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/par_ops par_ops.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/stream stream.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - rm -f ../bin/x86_64-linux-gnu/lmbench
2016-08-02 10:03:40,385 - Perf_kernel - INFO - sed -e "s/<version>/`cat bk.ver`/g" < ../scripts/lmbench > ../bin/x86_64-linux-gnu/lmbench
2016-08-02 10:03:40,385 - Perf_kernel - INFO - chmod +x ../bin/x86_64-linux-gnu/lmbench
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gmake[2]: 离开目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gmake[2]: 进入目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/cache cache.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_dram_page lat_dram_page.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_pmake lat_pmake.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_rand lat_rand.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,385 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_usleep lat_usleep.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,386 - Perf_kernel - INFO - gcc -O -DRUSAGE -DHAVE_uint=1 -DHAVE_int64_t=1 -DHAVE_DRAND48 -DHAVE_SCHED_SETAFFINITY=1   -o ../bin/x86_64-linux-gnu/lat_cmd lat_cmd.c ../bin/x86_64-linux-gnu/lmbench.a -lm
2016-08-02 10:03:40,386 - Perf_kernel - INFO - gmake[2]: 离开目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:03:40,386 - Perf_kernel - INFO - =====================================================================
2016-08-02 10:03:40,386 - Perf_kernel - INFO - 
2016-08-02 10:03:40,386 - Perf_kernel - INFO - 		L M B E N C H   C ON F I G U R A T I O N
2016-08-02 10:03:40,386 - Perf_kernel - INFO - 		----------------------------------------
2016-08-02 10:03:40,386 - Perf_kernel - INFO - 
2016-08-02 10:03:40,386 - Perf_kernel - INFO - You need to configure some parameters to lmbench.  Once you have configured
2016-08-02 10:03:40,386 - Perf_kernel - INFO - these parameters, you may do multiple runs by saying
2016-08-02 10:03:40,386 - Perf_kernel - INFO - 
2016-08-02 10:03:40,386 - Perf_kernel - INFO - 	"make rerun"
2016-08-02 10:03:40,386 - Perf_kernel - INFO - 
2016-08-02 10:03:40,386 - Perf_kernel - INFO - in the src subdirectory.
2016-08-02 10:03:40,387 - Perf_kernel - INFO - 
2016-08-02 10:03:40,387 - Perf_kernel - INFO - NOTICE: please do not have any other activity on the system if you can
2016-08-02 10:03:40,387 - Perf_kernel - INFO - help it.  Things like the second hand on your xclock or X perfmeters
2016-08-02 10:03:40,387 - Perf_kernel - INFO - are not so good when benchmarking.  In fact, X is not so good when
2016-08-02 10:03:40,387 - Perf_kernel - INFO - benchmarking.
2016-08-02 10:03:40,387 - Perf_kernel - INFO - 
2016-08-02 10:03:40,387 - Perf_kernel - INFO - =====================================================================
2016-08-02 10:03:40,387 - Perf_kernel - INFO - 
2016-08-02 10:03:40,387 - Perf_kernel - INFO - If you are running on an MP machine and you want to try running
2016-08-02 10:03:40,387 - Perf_kernel - INFO - multiple copies of lmbench in parallel, you can specify how many here.
2016-08-02 10:03:40,387 - Perf_kernel - INFO - 
2016-08-02 10:03:40,387 - Perf_kernel - INFO - Using this option will make the benchmark run 100x slower (sorry).
2016-08-02 10:03:40,387 - Perf_kernel - INFO - 
2016-08-02 10:03:40,387 - Perf_kernel - INFO - NOTE:  WARNING! This feature is experimental and many results are
2016-08-02 10:03:40,388 - Perf_kernel - INFO - 	known to be incorrect or random!
2016-08-02 10:03:40,388 - Perf_kernel - INFO - 
2016-08-02 10:03:40,388 - Perf_kernel - INFO - MULTIPLE COPIES [default 1]: =====================================================================
2016-08-02 10:03:40,388 - Perf_kernel - INFO - 
2016-08-02 10:03:40,388 - Perf_kernel - INFO - Options to control job placement
2016-08-02 10:03:40,388 - Perf_kernel - INFO - 1) Allow scheduler to place jobs
2016-08-02 10:03:40,388 - Perf_kernel - INFO - 2) Assign each benchmark process with any attendent child processes
2016-08-02 10:03:40,388 - Perf_kernel - INFO -    to its own processor
2016-08-02 10:03:40,388 - Perf_kernel - INFO - 3) Assign each benchmark process with any attendent child processes
2016-08-02 10:03:40,388 - Perf_kernel - INFO -    to its own processor, except that it will be as far as possible
2016-08-02 10:03:40,388 - Perf_kernel - INFO -    from other processes
2016-08-02 10:03:40,388 - Perf_kernel - INFO - 4) Assign each benchmark and attendent processes to their own
2016-08-02 10:03:40,388 - Perf_kernel - INFO -    processors
2016-08-02 10:03:40,388 - Perf_kernel - INFO - 5) Assign each benchmark and attendent processes to their own
2016-08-02 10:03:40,389 - Perf_kernel - INFO -    processors, except that they will be as far as possible from
2016-08-02 10:03:40,389 - Perf_kernel - INFO -    each other and other processes
2016-08-02 10:03:40,389 - Perf_kernel - INFO - 6) Custom placement: you assign each benchmark process with attendent
2016-08-02 10:03:40,389 - Perf_kernel - INFO -    child processes to processors
2016-08-02 10:03:40,389 - Perf_kernel - INFO - 7) Custom placement: you assign each benchmark and attendent
2016-08-02 10:03:40,389 - Perf_kernel - INFO -    processes to processors
2016-08-02 10:03:40,389 - Perf_kernel - INFO - 
2016-08-02 10:03:40,389 - Perf_kernel - INFO - Note: some benchmarks, such as bw_pipe, create attendent child
2016-08-02 10:03:40,389 - Perf_kernel - INFO - processes for each benchmark process.  For example, bw_pipe
2016-08-02 10:03:40,389 - Perf_kernel - INFO - needs a second process to send data down the pipe to be read
2016-08-02 10:03:40,389 - Perf_kernel - INFO - by the benchmark process.  If you have three copies of the
2016-08-02 10:03:40,389 - Perf_kernel - INFO - benchmark process running, then you actually have six processes;
2016-08-02 10:03:40,389 - Perf_kernel - INFO - three attendent child processes sending data down the pipes and
2016-08-02 10:03:40,390 - Perf_kernel - INFO - three benchmark processes reading data and doing the measurements.
2016-08-02 10:03:40,390 - Perf_kernel - INFO - 
2016-08-02 10:03:40,390 - Perf_kernel - INFO - Job placement selection [default 1]: =====================================================================
2016-08-02 10:03:40,390 - Perf_kernel - INFO - 
2016-08-02 10:03:40,390 - Perf_kernel - INFO - Hang on, we are calculating your timing granularity.
2016-08-02 10:03:40,390 - Perf_kernel - INFO - OK, it looks like you can time stuff down to 5000 usec resolution.
2016-08-02 10:03:40,390 - Perf_kernel - INFO - 
2016-08-02 10:03:40,390 - Perf_kernel - INFO - Hang on, we are calculating your timing overhead.
2016-08-02 10:03:40,390 - Perf_kernel - INFO - OK, it looks like your gettimeofday() costs 0 usecs.
2016-08-02 10:03:40,390 - Perf_kernel - INFO - 
2016-08-02 10:03:40,390 - Perf_kernel - INFO - Hang on, we are calculating your loop overhead.
2016-08-02 10:03:40,391 - Perf_kernel - INFO - OK, it looks like your benchmark loop costs 0.00000013 usecs.
2016-08-02 10:03:40,391 - Perf_kernel - INFO - 
2016-08-02 10:03:40,391 - Perf_kernel - INFO - =====================================================================
2016-08-02 10:03:40,391 - Perf_kernel - INFO - 
2016-08-02 10:03:40,391 - Perf_kernel - INFO - Several benchmarks operate on a range of memory.  This memory should be
2016-08-02 10:03:40,391 - Perf_kernel - INFO - sized such that it is at least 4 times as big as the external cache[s]
2016-08-02 10:03:40,391 - Perf_kernel - INFO - on your system.   It should be no more than 80% of your physical memory.
2016-08-02 10:03:40,391 - Perf_kernel - INFO - 
2016-08-02 10:03:40,391 - Perf_kernel - INFO - The bigger the range, the more accurate the results, but larger sizes
2016-08-02 10:03:40,391 - Perf_kernel - INFO - take somewhat longer to run the benchmark.
2016-08-02 10:03:40,391 - Perf_kernel - INFO - 
2016-08-02 10:03:40,391 - Perf_kernel - INFO - MB [default 2569]: Checking to see if you have 64MB MB; please wait for a moment...
2016-08-02 10:03:40,391 - Perf_kernel - INFO - Hang on, we are calculating your cache line size.
2016-08-02 10:03:40,392 - Perf_kernel - INFO - OK, it looks like your cache line is 128 bytes.
2016-08-02 10:03:40,392 - Perf_kernel - INFO - 
2016-08-02 10:03:40,392 - Perf_kernel - INFO - =====================================================================
2016-08-02 10:03:40,392 - Perf_kernel - INFO - 
2016-08-02 10:03:40,392 - Perf_kernel - INFO - lmbench measures a wide variety of system performance, and the full suite
2016-08-02 10:03:40,392 - Perf_kernel - INFO - of benchmarks can take a long time on some platforms.  Consequently, we
2016-08-02 10:03:40,392 - Perf_kernel - INFO - offer the capability to run only predefined subsets of benchmarks, one
2016-08-02 10:03:40,392 - Perf_kernel - INFO - for operating system specific benchmarks and one for hardware specific
2016-08-02 10:03:40,392 - Perf_kernel - INFO - benchmarks.  We also offer the option of running only selected benchmarks
2016-08-02 10:03:40,392 - Perf_kernel - INFO - which is useful during operating system development.
2016-08-02 10:03:40,392 - Perf_kernel - INFO - 
2016-08-02 10:03:40,392 - Perf_kernel - INFO - Please remember that if you intend to publish the results you either need
2016-08-02 10:03:40,392 - Perf_kernel - INFO - to do a full run or one of the predefined OS or hardware subsets.
2016-08-02 10:03:40,393 - Perf_kernel - INFO - 
2016-08-02 10:03:40,393 - Perf_kernel - INFO - SUBSET (ALL|HARWARE|OS|DEVELOPMENT) [default all]: =====================================================================
2016-08-02 10:03:40,393 - Perf_kernel - INFO - 
2016-08-02 10:03:40,393 - Perf_kernel - INFO - This benchmark measures, by default, memory latency for a number of
2016-08-02 10:03:40,393 - Perf_kernel - INFO - different strides.  That can take a long time and is most useful if you
2016-08-02 10:03:40,393 - Perf_kernel - INFO - are trying to figure out your cache line size or if your cache line size
2016-08-02 10:03:40,393 - Perf_kernel - INFO - is greater than 128 bytes.
2016-08-02 10:03:40,393 - Perf_kernel - INFO - 
2016-08-02 10:03:40,393 - Perf_kernel - INFO - If you are planning on sending in these results, please don't do a fast
2016-08-02 10:03:40,393 - Perf_kernel - INFO - run.
2016-08-02 10:03:40,393 - Perf_kernel - INFO - 
2016-08-02 10:03:40,393 - Perf_kernel - INFO - Answering yes means that we measure memory latency with a 128 byte stride.
2016-08-02 10:03:40,393 - Perf_kernel - INFO - 
2016-08-02 10:03:40,394 - Perf_kernel - INFO - FASTMEM [default no]: =====================================================================
2016-08-02 10:03:40,394 - Perf_kernel - INFO - 
2016-08-02 10:03:40,394 - Perf_kernel - INFO - This benchmark measures, by default, file system latency.  That can
2016-08-02 10:03:40,394 - Perf_kernel - INFO - take a long time on systems with old style file systems (i.e., UFS,
2016-08-02 10:03:40,394 - Perf_kernel - INFO - FFS, etc.).  Linux' ext2fs and Sun's tmpfs are fast enough that this
2016-08-02 10:03:40,394 - Perf_kernel - INFO - test is not painful.
2016-08-02 10:03:40,394 - Perf_kernel - INFO - 
2016-08-02 10:03:40,394 - Perf_kernel - INFO - If you are planning on sending in these results, please don't do a fast
2016-08-02 10:03:40,394 - Perf_kernel - INFO - run.
2016-08-02 10:03:40,394 - Perf_kernel - INFO - 
2016-08-02 10:03:40,394 - Perf_kernel - INFO - If you want to skip the file system latency tests, answer "yes" below.
2016-08-02 10:03:40,394 - Perf_kernel - INFO - 
2016-08-02 10:03:40,394 - Perf_kernel - INFO - SLOWFS [default no]: =====================================================================
2016-08-02 10:03:40,395 - Perf_kernel - INFO - 
2016-08-02 10:03:40,395 - Perf_kernel - INFO - This benchmark can measure disk zone bandwidths and seek times.  These can
2016-08-02 10:03:40,395 - Perf_kernel - INFO - be turned into whizzy graphs that pretty much tell you everything you might
2016-08-02 10:03:40,395 - Perf_kernel - INFO - need to know about the performance of your disk.
2016-08-02 10:03:40,395 - Perf_kernel - INFO - 
2016-08-02 10:03:40,395 - Perf_kernel - INFO - This takes a while and requires read access to a disk drive.
2016-08-02 10:03:40,395 - Perf_kernel - INFO - Write is not measured, see disk.c to see how if you want to do so.
2016-08-02 10:03:40,395 - Perf_kernel - INFO - 
2016-08-02 10:03:40,395 - Perf_kernel - INFO - If you want to skip the disk tests, hit return below.
2016-08-02 10:03:40,395 - Perf_kernel - INFO - 
2016-08-02 10:03:40,395 - Perf_kernel - INFO - If you want to include disk tests, then specify the path to the disk
2016-08-02 10:03:40,395 - Perf_kernel - INFO - device, such as /dev/sda.  For each disk that is readable, you'll be
2016-08-02 10:03:40,395 - Perf_kernel - INFO - prompted for a one line description of the drive, i.e.,
2016-08-02 10:03:40,396 - Perf_kernel - INFO - 
2016-08-02 10:03:40,396 - Perf_kernel - INFO - 	Iomega IDE ZIP
2016-08-02 10:03:40,396 - Perf_kernel - INFO - or
2016-08-02 10:03:40,396 - Perf_kernel - INFO - 	HP C3725S 2GB on 10MB/sec NCR SCSI bus
2016-08-02 10:03:40,396 - Perf_kernel - INFO - 
2016-08-02 10:03:40,396 - Perf_kernel - INFO - DISKS [default none]: =====================================================================
2016-08-02 10:03:40,396 - Perf_kernel - INFO - 
2016-08-02 10:03:40,396 - Perf_kernel - INFO - If you are running on an idle network and there are other, identically
2016-08-02 10:03:40,396 - Perf_kernel - INFO - configured systems, on the same wire (no gateway between you and them),
2016-08-02 10:03:40,396 - Perf_kernel - INFO - and you have rsh access to them, then you should run the network part
2016-08-02 10:03:40,396 - Perf_kernel - INFO - of the benchmarks to them.  Please specify any such systems as a space
2016-08-02 10:03:40,396 - Perf_kernel - INFO - separated list such as: ether-host fddi-host hippi-host.
2016-08-02 10:03:40,396 - Perf_kernel - INFO - 
2016-08-02 10:03:40,396 - Perf_kernel - INFO - REMOTE [default none]: =====================================================================
2016-08-02 10:03:40,397 - Perf_kernel - INFO - 
2016-08-02 10:03:40,397 - Perf_kernel - INFO - Calculating mhz, please wait for a moment...
2016-08-02 10:03:40,397 - Perf_kernel - INFO - I think your CPU mhz is
2016-08-02 10:03:40,397 - Perf_kernel - INFO - 
2016-08-02 10:03:40,397 - Perf_kernel - INFO - 	3390 MHz, 0.2950 nanosec clock
2016-08-02 10:03:40,397 - Perf_kernel - INFO - 
2016-08-02 10:03:40,397 - Perf_kernel - INFO - but I am frequently wrong.  If that is the wrong Mhz, type in your
2016-08-02 10:03:40,397 - Perf_kernel - INFO - best guess as to your processor speed.  It doesn't have to be exact,
2016-08-02 10:03:40,397 - Perf_kernel - INFO - but if you know it is around 800, say 800.
2016-08-02 10:03:40,397 - Perf_kernel - INFO - 
2016-08-02 10:03:40,397 - Perf_kernel - INFO - Please note that some processors, such as the P4, have a core which
2016-08-02 10:03:40,397 - Perf_kernel - INFO - is double-clocked, so on those processors the reported clock speed
2016-08-02 10:03:40,397 - Perf_kernel - INFO - will be roughly double the advertised clock rate.  For example, a
2016-08-02 10:03:40,398 - Perf_kernel - INFO - 1.8GHz P4 may be reported as a 3592MHz processor.
2016-08-02 10:03:40,398 - Perf_kernel - INFO - 
2016-08-02 10:03:40,398 - Perf_kernel - INFO - Processor mhz [default 3390 MHz, 0.2950 nanosec clock]: =====================================================================
2016-08-02 10:03:40,398 - Perf_kernel - INFO - 
2016-08-02 10:03:40,398 - Perf_kernel - INFO - We need a place to store a 64 Mbyte file as well as create and delete a
2016-08-02 10:03:40,398 - Perf_kernel - INFO - large number of small files.  We default to /usr/tmp.  If /usr/tmp is a
2016-08-02 10:03:40,398 - Perf_kernel - INFO - memory resident file system (i.e., tmpfs), pick a different place.
2016-08-02 10:03:40,398 - Perf_kernel - INFO - Please specify a directory that has enough space and is a local file
2016-08-02 10:03:40,398 - Perf_kernel - INFO - system.
2016-08-02 10:03:40,398 - Perf_kernel - INFO - 
2016-08-02 10:03:40,398 - Perf_kernel - INFO - FSDIR [default /usr/tmp]: =====================================================================
2016-08-02 10:03:40,398 - Perf_kernel - INFO - 
2016-08-02 10:03:40,398 - Perf_kernel - INFO - lmbench outputs status information as it runs various benchmarks.
2016-08-02 10:03:40,399 - Perf_kernel - INFO - By default this output is sent to /dev/tty, but you may redirect
2016-08-02 10:03:40,399 - Perf_kernel - INFO - it to any file you wish (such as /dev/null...).
2016-08-02 10:03:40,399 - Perf_kernel - INFO - 
2016-08-02 10:03:40,399 - Perf_kernel - INFO - Status output file [default /dev/tty]: =====================================================================
2016-08-02 10:03:40,399 - Perf_kernel - INFO - 
2016-08-02 10:03:40,399 - Perf_kernel - INFO - There is a database of benchmark results that is shipped with new
2016-08-02 10:03:40,399 - Perf_kernel - INFO - releases of lmbench.  Your results can be included in the database
2016-08-02 10:03:40,399 - Perf_kernel - INFO - if you wish.  The more results the better, especially if they include
2016-08-02 10:03:40,399 - Perf_kernel - INFO - remote networking.  If your results are interesting, i.e., for a new
2016-08-02 10:03:40,399 - Perf_kernel - INFO - fast box, they may be made available on the lmbench web page, which is
2016-08-02 10:03:40,399 - Perf_kernel - INFO - 
2016-08-02 10:03:40,399 - Perf_kernel - INFO - 	http://www.bitmover.com/lmbench
2016-08-02 10:03:40,399 - Perf_kernel - INFO - 
2016-08-02 10:03:40,400 - Perf_kernel - INFO - Mail results [default yes]: OK, no results mailed.
2016-08-02 10:03:40,400 - Perf_kernel - INFO - =====================================================================
2016-08-02 10:03:40,400 - Perf_kernel - INFO - 
2016-08-02 10:03:40,400 - Perf_kernel - INFO - Confguration done, thanks.
2016-08-02 10:03:40,400 - Perf_kernel - INFO - 
2016-08-02 10:03:40,400 - Perf_kernel - INFO - There is a mailing list for discussing lmbench hosted at BitMover.
2016-08-02 10:03:40,400 - Perf_kernel - INFO - Send mail to majordomo@bitmover.com to join the list.
2016-08-02 10:03:40,400 - Perf_kernel - INFO - 
2016-08-02 10:03:40,400 - Perf_kernel - INFO - make[1]: 离开目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:25:17,231 - Perf_kernel - INFO - cd src && /bin/make rerun
2016-08-02 10:25:17,231 - Perf_kernel - INFO - make[1]: 进入目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:25:17,231 - Perf_kernel - INFO - gmake[2]: 进入目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:25:17,231 - Perf_kernel - INFO - gmake[2]: 对“all”无需做任何事。
2016-08-02 10:25:17,231 - Perf_kernel - INFO - gmake[2]: 离开目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:25:17,231 - Perf_kernel - INFO - gmake[2]: 进入目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:25:17,231 - Perf_kernel - INFO - gmake[2]: 对“opt”无需做任何事。
2016-08-02 10:25:17,231 - Perf_kernel - INFO - gmake[2]: 离开目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:25:17,232 - Perf_kernel - INFO - make[1]: 离开目录“/home/Lpbs-i/tmp/Perf_kernel/src”
2016-08-02 10:25:17,233 - Perf_kernel - INFO - /bin/make see
2016-08-02 10:25:17,313 - Perf_kernel - INFO - cd results && /bin/make summary percent 2>/dev/null | more
2016-08-02 10:25:17,313 - Perf_kernel - INFO - make[1]: 进入目录“/home/Lpbs-i/tmp/Perf_kernel/results”
2016-08-02 10:25:17,313 - Perf_kernel - INFO - 
2016-08-02 10:25:17,313 - Perf_kernel - INFO - # LMBENCH 3.0 SUMMARY
2016-08-02 10:25:17,313 - Perf_kernel - INFO - 
2016-08-02 10:25:17,313 - Perf_kernel - INFO - ------------------------------------
2016-08-02 10:25:17,313 - Perf_kernel - INFO - (Alpha software, do not distribute)
2016-08-02 10:25:17,313 - Perf_kernel - INFO - 
2016-08-02 10:25:17,313 - Perf_kernel - INFO - ## Basic system parameters
2016-08-02 10:25:17,313 - Perf_kernel - INFO - 
2016-08-02 10:25:17,314 - Perf_kernel - INFO - *Host* | *OS* | *Description* | *Mhz* | *tlb pages* | *cache line bytes* | *mem par* | *scal load*
2016-08-02 10:25:17,314 - Perf_kernel - INFO - ------ | ---- | ------------- | ----- | ----------- | ------------------ | --------- | ------------
2016-08-02 10:25:17,314 - Perf_kernel - INFO - hostB     | Linux 4.4.1-1 |        x86_64-linux-gnu |       |             |                    |           |            1
2016-08-02 10:25:17,314 - Perf_kernel - INFO - 
2016-08-02 10:25:17,314 - Perf_kernel - INFO - hostB     | Linux 3.10.0- |        x86_64-linux-gnu |  3390 |          32 |                128 |    4.4200 |            1
2016-08-02 10:25:17,314 - Perf_kernel - INFO - 
2016-08-02 10:25:17,314 - Perf_kernel - INFO - hostB     | Linux 3.10.0- |        x86_64-linux-gnu |  3390 |          32 |                128 |    4.3800 |            1
2016-08-02 10:25:17,314 - Perf_kernel - INFO - 
2016-08-02 10:25:17,314 - Perf_kernel - INFO - 
2016-08-02 10:25:17,314 - Perf_kernel - INFO - ## Processor, Processes - times in microseconds - smaller is better
2016-08-02 10:25:17,314 - Perf_kernel - INFO - 
2016-08-02 10:25:17,314 - Perf_kernel - INFO - *Host* | *OS* | *Mhz* | *null call* | *null I/O* | *stat* | *open clos* | *slct TCP* | *sig inst* | *sig hndl* | *fork proc* | *exec proc* | *sh proc*
2016-08-02 10:25:17,314 - Perf_kernel - INFO - ------ | ---- | ----- | ----------- | ---------- | ------ | ----------- | ---------- | ---------- | ---------- | ----------- | ----------- | ---------
2016-08-02 10:25:17,315 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 |    -1 |        0.06 |       0.10 |   0.57 |        1.18 |       2.64 |       0.12 |       0.74 |        105. |        471. |       3018
2016-08-02 10:25:17,315 - Perf_kernel - INFO - 
2016-08-02 10:25:17,315 - Perf_kernel - INFO - hostA     | Linux 3.10.0- |  3390 |        0.07 |       0.13 |   0.64 |        1.34 |       2.29 |       0.14 |       0.74 |        78.1 |        275. |       1112
2016-08-02 10:25:17,315 - Perf_kernel - INFO - 
2016-08-02 10:25:17,315 - Perf_kernel - INFO - hostA     | Linux 3.10.0- |  3390 |        0.07 |       0.13 |   0.64 |        1.32 |       2.22 |       0.14 |       0.74 |        80.9 |        283. |       1077
2016-08-02 10:25:17,315 - Perf_kernel - INFO - 
2016-08-02 10:25:17,315 - Perf_kernel - INFO - 
2016-08-02 10:25:17,315 - Perf_kernel - INFO - ## Basic integer operations - times in nanoseconds - smaller is better
2016-08-02 10:25:17,315 - Perf_kernel - INFO - 
2016-08-02 10:25:17,315 - Perf_kernel - INFO - *Host* | *OS* | *intgr bit* | *intgr add* | *intgr mul* | *intgr div* | *intgr mod*
2016-08-02 10:25:17,315 - Perf_kernel - INFO - ------ | ---- | ----------- | ----------- | ----------- | ----------- | -----------
2016-08-02 10:25:17,315 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 | 0.4100 | 0.1000 | 0.0100 | 9.6900 |   10.4
2016-08-02 10:25:17,315 - Perf_kernel - INFO - 
2016-08-02 10:25:17,316 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 0.3000 | 0.0400 | 0.9100 | 6.6600 | 7.4500
2016-08-02 10:25:17,316 - Perf_kernel - INFO - 
2016-08-02 10:25:17,316 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 0.3000 | 0.0400 | 0.9100 | 6.6600 | 7.4500
2016-08-02 10:25:17,316 - Perf_kernel - INFO - 
2016-08-02 10:25:17,316 - Perf_kernel - INFO - 
2016-08-02 10:25:17,316 - Perf_kernel - INFO - ## Basic uint64 operations - times in nanoseconds - smaller is better
2016-08-02 10:25:17,316 - Perf_kernel - INFO - 
2016-08-02 10:25:17,316 - Perf_kernel - INFO - *Host* | *OS* | *int64 bit* | *int64 add* | *int64 mul* | *int64 div* | *int64 mod*
2016-08-02 10:25:17,316 - Perf_kernel - INFO - ------ | ---- | ----------- | ----------- | ----------- | ----------- | -----------
2016-08-02 10:25:17,316 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 |  0.400 | 0.1000 |        |   16.4 |   16.4
2016-08-02 10:25:17,316 - Perf_kernel - INFO - 
2016-08-02 10:25:17,316 - Perf_kernel - INFO - hostA     | Linux 3.10.0- |  0.300 | 0.0400 | 0.9000 |   13.3 |   12.7
2016-08-02 10:25:17,316 - Perf_kernel - INFO - 
2016-08-02 10:25:17,316 - Perf_kernel - INFO - hostA     | Linux 3.10.0- |  0.300 | 0.0400 | 0.8900 |   13.2 |   12.7
2016-08-02 10:25:17,317 - Perf_kernel - INFO - 
2016-08-02 10:25:17,317 - Perf_kernel - INFO - 
2016-08-02 10:25:17,317 - Perf_kernel - INFO - ## Basic float operations - times in nanoseconds - smaller is better
2016-08-02 10:25:17,317 - Perf_kernel - INFO - 
2016-08-02 10:25:17,317 - Perf_kernel - INFO - *Host* | *OS* | *float add* | *float mul* | *float div* | *float bogo*
2016-08-02 10:25:17,317 - Perf_kernel - INFO - ------ | ---- | ----------- | ----------- | ----------- | ------------
2016-08-02 10:25:17,317 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 | 1.2200 | 1.9500 | 5.1300 | 2.7600
2016-08-02 10:25:17,317 - Perf_kernel - INFO - 
2016-08-02 10:25:17,317 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 0.8900 | 1.4800 | 4.2300 | 4.2300
2016-08-02 10:25:17,317 - Perf_kernel - INFO - 
2016-08-02 10:25:17,317 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 0.8900 | 1.4700 | 4.2300 | 4.2400
2016-08-02 10:25:17,317 - Perf_kernel - INFO - 
2016-08-02 10:25:17,317 - Perf_kernel - INFO - 
2016-08-02 10:25:17,318 - Perf_kernel - INFO - ## Basic double operations - times in nanoseconds - smaller is better
2016-08-02 10:25:17,318 - Perf_kernel - INFO - 
2016-08-02 10:25:17,318 - Perf_kernel - INFO - *Host* | *OS* | *double add* | *double mul* | *double div* | *double bogo*
2016-08-02 10:25:17,318 - Perf_kernel - INFO - ------ | ---- | ------------ | ------------ | ------------ | -------------
2016-08-02 10:25:17,318 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 | 1.1700 | 1.9400 | 7.9400 | 5.5800
2016-08-02 10:25:17,318 - Perf_kernel - INFO - 
2016-08-02 10:25:17,318 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 0.8900 | 1.4800 | 6.5900 | 6.5000
2016-08-02 10:25:17,318 - Perf_kernel - INFO - 
2016-08-02 10:25:17,318 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 0.8900 | 1.4700 | 6.5900 | 6.5000
2016-08-02 10:25:17,318 - Perf_kernel - INFO - 
2016-08-02 10:25:17,318 - Perf_kernel - INFO - 
2016-08-02 10:25:17,318 - Perf_kernel - INFO - ## Context switching - times in microseconds - smaller is better
2016-08-02 10:25:17,318 - Perf_kernel - INFO - 
2016-08-02 10:25:17,318 - Perf_kernel - INFO - *Host* | *OS* | *2p/0K ctxsw* | *2p/16K ctxsw* | *2p/64K ctxsw* | *8p/16K ctxsw* | *8p/64K ctxsw* | *16p/16K ctxsw* | *16p/64K ctxsw*
2016-08-02 10:25:17,319 - Perf_kernel - INFO - ------ | ---- | ------------- | -------------- | -------------- | -------------- | -------------- | --------------- | ----------------
2016-08-02 10:25:17,319 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 | 0.8700 | 2.2000 | 4.8600 | 3.2500 | 3.7100 | 4.03000 | 6.45000|
2016-08-02 10:25:17,319 - Perf_kernel - INFO - 
2016-08-02 10:25:17,319 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 1.4400 | 1.4700 | 1.5200 | 1.8100 | 2.0500 | 1.91000 | 2.29000|
2016-08-02 10:25:17,319 - Perf_kernel - INFO - 
2016-08-02 10:25:17,319 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 1.5100 | 1.4400 | 1.4000 | 1.8100 | 1.9500 | 1.92000 | 2.19000|
2016-08-02 10:25:17,319 - Perf_kernel - INFO - 
2016-08-02 10:25:17,319 - Perf_kernel - INFO - 
2016-08-02 10:25:17,319 - Perf_kernel - INFO - ## *Local* Communication latencies in microseconds - smaller is better
2016-08-02 10:25:17,319 - Perf_kernel - INFO - 
2016-08-02 10:25:17,319 - Perf_kernel - INFO - *Host* | *OS* | *2p/0K ctxsw* | *Pipe* | *AF UNIX* | *UDP* | *RPC/UDP* | *TCP* | *RPC/TCP* | *TCP conn*
2016-08-02 10:25:17,319 - Perf_kernel - INFO - ------ | ---- | ------------- | ------ | --------- | ----- | --------- | ----- | --------- | ----------
2016-08-02 10:25:17,319 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 | 0.870 | 5.019 | 4.28 | 7.994 |       | 9.280 |       |  19.
2016-08-02 10:25:17,319 - Perf_kernel - INFO - 
2016-08-02 10:25:17,320 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 1.440 | 3.998 | 4.10 |  10.4 |       |  12.4 |       |  24.
2016-08-02 10:25:17,320 - Perf_kernel - INFO - 
2016-08-02 10:25:17,320 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 1.510 | 3.952 | 4.99 |  10.5 |       |  12.4 |       |  24.
2016-08-02 10:25:17,320 - Perf_kernel - INFO - 
2016-08-02 10:25:17,320 - Perf_kernel - INFO - 
2016-08-02 10:25:17,320 - Perf_kernel - INFO - ## *Remote* Communication latencies in microseconds - smaller is better
2016-08-02 10:25:17,320 - Perf_kernel - INFO - 
2016-08-02 10:25:17,320 - Perf_kernel - INFO - *Host* | *OS* | *UDP* | *RPC/UDP* | *TCP* | *RPC/TCP* | *TCP conn*
2016-08-02 10:25:17,320 - Perf_kernel - INFO - ------ | ---- | ----- | --------- | ----- | --------- | ----------
2016-08-02 10:25:17,320 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 |       |       |       |       |
2016-08-02 10:25:17,320 - Perf_kernel - INFO - 
2016-08-02 10:25:17,320 - Perf_kernel - INFO - hostA     | Linux 3.10.0- |       |       |       |       |
2016-08-02 10:25:17,320 - Perf_kernel - INFO - 
2016-08-02 10:25:17,321 - Perf_kernel - INFO - hostA     | Linux 3.10.0- |       |       |       |       |
2016-08-02 10:25:17,321 - Perf_kernel - INFO - 
2016-08-02 10:25:17,321 - Perf_kernel - INFO - 
2016-08-02 10:25:17,321 - Perf_kernel - INFO - ## File & VM system latencies in microseconds - smaller is better
2016-08-02 10:25:17,321 - Perf_kernel - INFO - 
2016-08-02 10:25:17,321 - Perf_kernel - INFO - *Host* | *OS* | *0K File Create* | *0K File Delete* | *10K File Create* | *10K File Delete* | *Mmap Latency* | *Prot Fault* | *Page Fault* | *100fd selct*
2016-08-02 10:25:17,321 - Perf_kernel - INFO - ------ | ---- | ---------------- | ---------------- | ----------------- | ----------------- | -------------- | ------------ | ------------ | -------------
2016-08-02 10:25:17,321 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 | 5.8437 | 4.9635 |   11.8 | 7.6777 |   371.0 | 0.430 | 0.21160 | 1.024
2016-08-02 10:25:17,321 - Perf_kernel - INFO - 
2016-08-02 10:25:17,321 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 6.0631 | 5.3037 |   18.8 |   10.4 |   280.0 | 0.185 | 0.58420 | 0.890
2016-08-02 10:25:17,321 - Perf_kernel - INFO - 
2016-08-02 10:25:17,321 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 5.9753 | 5.1890 |   18.6 |   10.1 |   290.0 | 0.201 | 0.57680 | 0.872
2016-08-02 10:25:17,321 - Perf_kernel - INFO - 
2016-08-02 10:25:17,321 - Perf_kernel - INFO - 
2016-08-02 10:25:17,322 - Perf_kernel - INFO - ## *Local* Communication bandwidths in MB/s - bigger is better
2016-08-02 10:25:17,322 - Perf_kernel - INFO - 
2016-08-02 10:25:17,322 - Perf_kernel - INFO - *Host* | *OS* | *Pipe* | *AF UNIX* | *TCP* | *File reread* | *Mmap reread* | *Bcopy(libc)* | *Bcopy(hand)* | *Mem read* | *Mem write*
2016-08-02 10:25:17,322 - Perf_kernel - INFO - ------ | ---- | ------ | --------- | ----- | ------------- | ------------- | ------------- | ------------- | ---------- | -----------
2016-08-02 10:25:17,322 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 | 3287 | 7273 | 4760 | 5979.1 |  10.4K | 4911.4 | 3446.2 | 10.K | 4106.
2016-08-02 10:25:17,322 - Perf_kernel - INFO - 
2016-08-02 10:25:17,322 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 4993 | 11.K | 5608 | 8082.5 |  12.6K | 6907.1 | 5077.1 | 9785 | 7849.
2016-08-02 10:25:17,322 - Perf_kernel - INFO - 
2016-08-02 10:25:17,322 - Perf_kernel - INFO - hostA     | Linux 3.10.0- | 4849 | 11.K | 5515 | 8090.3 |  12.6K | 6932.0 | 5163.8 | 9571 | 7860.
2016-08-02 10:25:17,322 - Perf_kernel - INFO - 
2016-08-02 10:25:17,322 - Perf_kernel - INFO - 
2016-08-02 10:25:17,322 - Perf_kernel - INFO - ## Memory latencies in nanoseconds - smaller is better
2016-08-02 10:25:17,322 - Perf_kernel - INFO - 
2016-08-02 10:25:17,322 - Perf_kernel - INFO - (WARNING - may not be correct, check graphs)
2016-08-02 10:25:17,323 - Perf_kernel - INFO - 
2016-08-02 10:25:17,323 - Perf_kernel - INFO - *Host* | *OS* | *Mhz* | *L1 $* |  *L2 $* | *Main mem* | *Rand mem* | *Guesses*
2016-08-02 10:25:17,323 - Perf_kernel - INFO - ------ | ---- | ----- | ------- | -------- | ---------- | ---------- | ---------
2016-08-02 10:25:17,323 - Perf_kernel - INFO - hostA     | Linux 4.4.1-1 |    -1| |      - |      - |           -|     Bad mhz?
2016-08-02 10:25:17,323 - Perf_kernel - INFO - 
2016-08-02 10:25:17,323 - Perf_kernel - INFO - hostA     | Linux 3.10.0- |  3390|  1.1800 | 3.5410 |        19.8 |        67.1 |
2016-08-02 10:25:17,323 - Perf_kernel - INFO - 
2016-08-02 10:25:17,323 - Perf_kernel - INFO - hostA     | Linux 3.10.0- |  3390|  1.1800 | 3.5410 |        19.5 |        67.0 |
2016-08-02 10:25:17,323 - Perf_kernel - INFO - 
2016-08-02 10:25:17,323 - Perf_kernel - INFO - make[1]: 离开目录“/home/Lpbs-i/tmp/Perf_kernel/results”
